Traceback (most recent call last):
  File "/home/runner/work/ds-seminar/ds-seminar/.venv/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/work/ds-seminar/ds-seminar/.venv/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/ds-seminar/ds-seminar/.venv/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.rye/py/cpython@3.11.11/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/runner/work/ds-seminar/ds-seminar/.venv/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/runner/work/ds-seminar/ds-seminar/.venv/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/work/ds-seminar/ds-seminar/.venv/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
from sklearn.datasets import fetch_california_housing

dataset = fetch_california_housing()
df = pd.DataFrame(dataset.data, columns=dataset.feature_names)
df['Price'] = dataset.target
df.head()
------------------

----- stderr -----
/home/runner/work/ds-seminar/ds-seminar/.venv/lib/python3.11/site-packages/sklearn/datasets/_base.py:1519: UserWarning: Retry downloading from url: https://ndownloader.figshare.com/files/5976036
  warnings.warn(f"Retry downloading from url: {remote.url}")
------------------

[31m---------------------------------------------------------------------------[39m
[31mHTTPError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 4[39m
[32m      1[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mpandas[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mpd[39;00m
[32m      2[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01msklearn[39;00m[34;01m.[39;00m[34;01mdatasets[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m fetch_california_housing
[32m----> [39m[32m4[39m dataset = [43mfetch_california_housing[49m[43m([49m[43m)[49m
[32m      5[39m df = pd.DataFrame(dataset.data, columns=dataset.feature_names)
[32m      6[39m df[[33m'[39m[33mPrice[39m[33m'[39m] = dataset.target

[36mFile [39m[32m~/work/ds-seminar/ds-seminar/.venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py:216[39m, in [36mvalidate_params.<locals>.decorator.<locals>.wrapper[39m[34m(*args, **kwargs)[39m
[32m    210[39m [38;5;28;01mtry[39;00m:
[32m    211[39m     [38;5;28;01mwith[39;00m config_context(
[32m    212[39m         skip_parameter_validation=(
[32m    213[39m             prefer_skip_nested_validation [38;5;129;01mor[39;00m global_skip_validation
[32m    214[39m         )
[32m    215[39m     ):
[32m--> [39m[32m216[39m         [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
[32m    217[39m [38;5;28;01mexcept[39;00m InvalidParameterError [38;5;28;01mas[39;00m e:
[32m    218[39m     [38;5;66;03m# When the function is just a wrapper around an estimator, we allow[39;00m
[32m    219[39m     [38;5;66;03m# the function to delegate validation to the estimator, but we replace[39;00m
[32m    220[39m     [38;5;66;03m# the name of the estimator by the name of the function in the error[39;00m
[32m    221[39m     [38;5;66;03m# message to avoid confusion.[39;00m
[32m    222[39m     msg = re.sub(
[32m    223[39m         [33mr[39m[33m"[39m[33mparameter of [39m[33m\[39m[33mw+ must be[39m[33m"[39m,
[32m    224[39m         [33mf[39m[33m"[39m[33mparameter of [39m[38;5;132;01m{[39;00mfunc.[34m__qualname__[39m[38;5;132;01m}[39;00m[33m must be[39m[33m"[39m,
[32m    225[39m         [38;5;28mstr[39m(e),
[32m    226[39m     )

[36mFile [39m[32m~/work/ds-seminar/ds-seminar/.venv/lib/python3.11/site-packages/sklearn/datasets/_california_housing.py:177[39m, in [36mfetch_california_housing[39m[34m(data_home, download_if_missing, return_X_y, as_frame, n_retries, delay)[39m
[32m    171[39m     [38;5;28;01mraise[39;00m [38;5;167;01mOSError[39;00m([33m"[39m[33mData not found and `download_if_missing` is False[39m[33m"[39m)
[32m    173[39m logger.info(
[32m    174[39m     [33m"[39m[33mDownloading Cal. housing from [39m[38;5;132;01m{}[39;00m[33m to [39m[38;5;132;01m{}[39;00m[33m"[39m.format(ARCHIVE.url, data_home)
[32m    175[39m )
[32m--> [39m[32m177[39m archive_path = [43m_fetch_remote[49m[43m([49m
[32m    178[39m [43m    [49m[43mARCHIVE[49m[43m,[49m
[32m    179[39m [43m    [49m[43mdirname[49m[43m=[49m[43mdata_home[49m[43m,[49m
[32m    180[39m [43m    [49m[43mn_retries[49m[43m=[49m[43mn_retries[49m[43m,[49m
[32m    181[39m [43m    [49m[43mdelay[49m[43m=[49m[43mdelay[49m[43m,[49m
[32m    182[39m [43m[49m[43m)[49m
[32m    184[39m [38;5;28;01mwith[39;00m tarfile.open(mode=[33m"[39m[33mr:gz[39m[33m"[39m, name=archive_path) [38;5;28;01mas[39;00m f:
[32m    185[39m     cal_housing = np.loadtxt(
[32m    186[39m         f.extractfile([33m"[39m[33mCaliforniaHousing/cal_housing.data[39m[33m"[39m), delimiter=[33m"[39m[33m,[39m[33m"[39m
[32m    187[39m     )

[36mFile [39m[32m~/work/ds-seminar/ds-seminar/.venv/lib/python3.11/site-packages/sklearn/datasets/_base.py:1513[39m, in [36m_fetch_remote[39m[34m(remote, dirname, n_retries, delay)[39m
[32m   1511[39m [38;5;28;01mwhile[39;00m [38;5;28;01mTrue[39;00m:
[32m   1512[39m     [38;5;28;01mtry[39;00m:
[32m-> [39m[32m1513[39m         [43murlretrieve[49m[43m([49m[43mremote[49m[43m.[49m[43murl[49m[43m,[49m[43m [49m[43mtemp_file_path[49m[43m)[49m
[32m   1514[39m         [38;5;28;01mbreak[39;00m
[32m   1515[39m     [38;5;28;01mexcept[39;00m (URLError, [38;5;167;01mTimeoutError[39;00m):

[36mFile [39m[32m~/.rye/py/cpython@3.11.11/lib/python3.11/urllib/request.py:241[39m, in [36murlretrieve[39m[34m(url, filename, reporthook, data)[39m
[32m    224[39m [38;5;250m[39m[33;03m"""[39;00m
[32m    225[39m [33;03mRetrieve a URL into a temporary location on disk.[39;00m
[32m    226[39m 
[32m   (...)[39m[32m    237[39m [33;03mdata file as well as the resulting HTTPMessage object.[39;00m
[32m    238[39m [33;03m"""[39;00m
[32m    239[39m url_type, path = _splittype(url)
[32m--> [39m[32m241[39m [38;5;28;01mwith[39;00m contextlib.closing([43murlopen[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mdata[49m[43m)[49m) [38;5;28;01mas[39;00m fp:
[32m    242[39m     headers = fp.info()
[32m    244[39m     [38;5;66;03m# Just return the local path and the "headers" for file://[39;00m
[32m    245[39m     [38;5;66;03m# URLs. No sense in performing a copy unless requested.[39;00m

[36mFile [39m[32m~/.rye/py/cpython@3.11.11/lib/python3.11/urllib/request.py:216[39m, in [36murlopen[39m[34m(url, data, timeout, cafile, capath, cadefault, context)[39m
[32m    214[39m [38;5;28;01melse[39;00m:
[32m    215[39m     opener = _opener
[32m--> [39m[32m216[39m [38;5;28;01mreturn[39;00m [43mopener[49m[43m.[49m[43mopen[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mdata[49m[43m,[49m[43m [49m[43mtimeout[49m[43m)[49m

[36mFile [39m[32m~/.rye/py/cpython@3.11.11/lib/python3.11/urllib/request.py:525[39m, in [36mOpenerDirector.open[39m[34m(self, fullurl, data, timeout)[39m
[32m    523[39m [38;5;28;01mfor[39;00m processor [38;5;129;01min[39;00m [38;5;28mself[39m.process_response.get(protocol, []):
[32m    524[39m     meth = [38;5;28mgetattr[39m(processor, meth_name)
[32m--> [39m[32m525[39m     response = [43mmeth[49m[43m([49m[43mreq[49m[43m,[49m[43m [49m[43mresponse[49m[43m)[49m
[32m    527[39m [38;5;28;01mreturn[39;00m response

[36mFile [39m[32m~/.rye/py/cpython@3.11.11/lib/python3.11/urllib/request.py:634[39m, in [36mHTTPErrorProcessor.http_response[39m[34m(self, request, response)[39m
[32m    631[39m [38;5;66;03m# According to RFC 2616, "2xx" code indicates that the client's[39;00m
[32m    632[39m [38;5;66;03m# request was successfully received, understood, and accepted.[39;00m
[32m    633[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([32m200[39m <= code < [32m300[39m):
[32m--> [39m[32m634[39m     response = [38;5;28;43mself[39;49m[43m.[49m[43mparent[49m[43m.[49m[43merror[49m[43m([49m
[32m    635[39m [43m        [49m[33;43m'[39;49m[33;43mhttp[39;49m[33;43m'[39;49m[43m,[49m[43m [49m[43mrequest[49m[43m,[49m[43m [49m[43mresponse[49m[43m,[49m[43m [49m[43mcode[49m[43m,[49m[43m [49m[43mmsg[49m[43m,[49m[43m [49m[43mhdrs[49m[43m)[49m
[32m    637[39m [38;5;28;01mreturn[39;00m response

[36mFile [39m[32m~/.rye/py/cpython@3.11.11/lib/python3.11/urllib/request.py:563[39m, in [36mOpenerDirector.error[39m[34m(self, proto, *args)[39m
[32m    561[39m [38;5;28;01mif[39;00m http_err:
[32m    562[39m     args = ([38;5;28mdict[39m, [33m'[39m[33mdefault[39m[33m'[39m, [33m'[39m[33mhttp_error_default[39m[33m'[39m) + orig_args
[32m--> [39m[32m563[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_call_chain[49m[43m([49m[43m*[49m[43margs[49m[43m)[49m

[36mFile [39m[32m~/.rye/py/cpython@3.11.11/lib/python3.11/urllib/request.py:496[39m, in [36mOpenerDirector._call_chain[39m[34m(self, chain, kind, meth_name, *args)[39m
[32m    494[39m [38;5;28;01mfor[39;00m handler [38;5;129;01min[39;00m handlers:
[32m    495[39m     func = [38;5;28mgetattr[39m(handler, meth_name)
[32m--> [39m[32m496[39m     result = [43mfunc[49m[43m([49m[43m*[49m[43margs[49m[43m)[49m
[32m    497[39m     [38;5;28;01mif[39;00m result [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m    498[39m         [38;5;28;01mreturn[39;00m result

[36mFile [39m[32m~/.rye/py/cpython@3.11.11/lib/python3.11/urllib/request.py:643[39m, in [36mHTTPDefaultErrorHandler.http_error_default[39m[34m(self, req, fp, code, msg, hdrs)[39m
[32m    642[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mhttp_error_default[39m([38;5;28mself[39m, req, fp, code, msg, hdrs):
[32m--> [39m[32m643[39m     [38;5;28;01mraise[39;00m HTTPError(req.full_url, code, msg, hdrs, fp)

[31mHTTPError[39m: HTTP Error 403: Forbidden

